const jwt = require('jsonwebtoken');
const axios = require('axios');

exports.authenticateToken = async (req, res, next) => {
    try {
        const token = req.cookies?.token || req.headers['authorization']?.split(' ')[1]; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á Cookies ‡πÅ‡∏•‡∏∞ Authorization Header
        let user;

        if (token) {
            // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JWT ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö (Login ‡∏î‡πâ‡∏ß‡∏¢ Email + Password)
            try {
                // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ token ‡πÄ‡∏õ‡πá‡∏ô JWT ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                user = jwt.verify(token, process.env.SECRET); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JWT
                console.log("‚úÖ Authenticated User (JWT):", user);
            } catch (jwtError) {
                // ‡∏ñ‡πâ‡∏≤ JWT ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô "jwt malformed")
                console.log("‚ùå Invalid JWT Token:", jwtError.message);

                // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Google Token (Login ‡∏î‡πâ‡∏ß‡∏¢ Google)
                const response = await axios.get(`https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=${token}`);
                // console.log("Google API response:", response.data);
                user = response.data; // user ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google
                // console.log("‚úÖ Authenticated User (Google):", user);
            }

            req.user = user; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡πÉ‡∏ô req.user
            return next(); // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á middleware ‡∏´‡∏£‡∏∑‡∏≠ route handler ‡∏ï‡πà‡∏≠‡πÑ‡∏õ
        } else {
            return res.status(401).json({ message: "No token provided" }); // ‡πÑ‡∏°‡πà‡∏°‡∏µ token
        }
    } catch (error) {
        console.error("‚ùå Token Error:", error.message || error.response?.data);
        if (error.response) {
            console.log("üî¥ Google API Error:", error.response.data); // ‡∏î‡∏π error ‡∏à‡∏≤‡∏Å Google API
        }
        return res.status(403).json({ message: "Invalid token" });
    }
};
